# .github/workflows/python-ci.yml

name: Python CI/CD

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*.*.*' # Run on tags like v1.2.3
  pull_request:
    branches:
      - "main"

jobs:
  # The Build & Test job remains the same
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # This single command installs your package AND its test dependencies
          pip install .[test]

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest and generate coverage report
        run: pytest --cov --cov-report=xml

      - name: Post Coverage Comment on PR
        if: github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ⬇️ ADD THIS NEW PUBLISH JOB ⬇️
  publish:
    # This job only runs when a tag is pushed
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: build # It will only run if the 'build' job succeeds
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for trusted publishing

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build package
        run: python -m build

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}